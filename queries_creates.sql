




CREATE TABLE IF NOT EXISTS pais (
    id_pais char(2) NOT NULL,
    nombre_pais varchar(40),
    
    CONSTRAINT pk_pais PRIMARY KEY (id_pais),
    CONSTRAINT pais_id_pais_check CHECK (id_pais IS NOT NULL)
);



CREATE TABLE IF NOT EXISTS ciudad (
    id_ciudad numeric(6,0) NOT NULL,
    nombre_ciudad varchar(100) NOT NULL,
    id_pais char(2) NOT NULL,
    
    CONSTRAINT pk_ciudad PRIMARY KEY (id_ciudad),
    CONSTRAINT ciudad_id_pais_fkey FOREIGN KEY (id_pais)
        REFERENCES pais (id_pais)
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT ciudad_id_ciudad_check CHECK (id_ciudad IS NOT NULL),
    CONSTRAINT ciudad_nombre_ciudad_check CHECK (nombre_ciudad IS NOT NULL),
    CONSTRAINT ciudad_id_pais_check CHECK (id_pais IS NOT NULL)
);

CREATE TABLE IF NOT EXISTS empresa_productora (
    codigo_productora varchar(6) NOT NULL,
    nombre_productora varchar(60) NOT NULL,
    id_ciudad numeric(6,0),
    
    CONSTRAINT pk_empresa_productora PRIMARY KEY (codigo_productora),
    CONSTRAINT empresa_productora_id_ciudad_fkey FOREIGN KEY (id_ciudad)
        REFERENCES ciudad (id_ciudad)
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT empresa_productora_codigo_productora_check CHECK (codigo_productora IS NOT NULL),
    CONSTRAINT empresa_productora_nombre_productora_check CHECK (nombre_productora IS NOT NULL)
);


CREATE TABLE IF NOT EXISTS pelicula (
    codigo_pelicula integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    titulo varchar(60) NOT NULL,
    idioma varchar(20) NOT NULL,
    formato varchar(20) NOT NULL,
    genero varchar(30) NOT NULL,
    codigo_productora varchar(6) NOT NULL,

    CONSTRAINT pelicula_codigo_productora_fkey FOREIGN KEY (codigo_productora)
        REFERENCES empresa_productora (codigo_productora)
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);


CREATE TABLE IF NOT EXISTS distribuidor (
    id_distribuidor integer NOT NULL,
    nombre varchar(80) NOT NULL,
    direccion varchar(120) NOT NULL,
    telefono varchar(20),
    tipo char(1) NOT NULL,

    CONSTRAINT pk_distribuidor PRIMARY KEY (id_distribuidor)
);


CREATE TABLE IF NOT EXISTS internacional (
    id_distribuidor integer NOT NULL,
    codigo_pais varchar(5) NOT NULL,

    CONSTRAINT pk_internacional PRIMARY KEY (id_distribuidor),
    CONSTRAINT internacional_id_distribuidor_fkey FOREIGN KEY (id_distribuidor)
        REFERENCES distribuidor (id_distribuidor)
        ON UPDATE NO ACTION
        ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS nacional (
    id_distribuidor integer NOT NULL,
    nro_inscripcion integer NOT NULL,
    encargado varchar(60) NOT NULL,
    id_distrib_mayorista integer,

    CONSTRAINT pk_nacional PRIMARY KEY (id_distribuidor),

    CONSTRAINT fk_nacional_distribuidor FOREIGN KEY (id_distribuidor)
        REFERENCES distribuidor (id_distribuidor)
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,

    CONSTRAINT fk_nacional_mayorista FOREIGN KEY (id_distrib_mayorista)
        REFERENCES internacional (id_distribuidor)
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);


CREATE TABLE IF NOT EXISTS pelis_mas_entragadas (
    codigo_pelicula integer NOT NULL,
    titulo varchar(60) NOT NULL,
    cantidad_de_entregas integer NOT NULL
);


CREATE TABLE IF NOT EXISTS video (
    id_video integer NOT NULL,
    razon_social varchar(60) NOT NULL,
    direccion varchar(80) NOT NULL,
    telefono varchar(15),
    propietario varchar(60) NOT NULL,

    CONSTRAINT pk_video PRIMARY KEY (id_video)
);

CREATE TABLE IF NOT EXISTS video (
    id_video integer NOT NULL,
    razon_social varchar(60) NOT NULL,
    direccion varchar(80) NOT NULL,
    telefono varchar(15),
    propietario varchar(60) NOT NULL,

    CONSTRAINT pk_video PRIMARY KEY (id_video)
);


CREATE TABLE IF NOT EXISTS video (
    id_video integer NOT NULL,
    razon_social varchar(60) NOT NULL,
    direccion varchar(80) NOT NULL,
    telefono varchar(15),
    propietario varchar(60) NOT NULL,

    CONSTRAINT pk_video PRIMARY KEY (id_video)
);

CREATE TABLE IF NOT EXISTS departamento (
    id_departamento integer NOT NULL,
    id_distribuidor integer NOT NULL,
    nombre varchar(30) NOT NULL,
    calle varchar(40),
    numero integer,
    id_ciudad integer NOT NULL,
    jefe_departamento integer NOT NULL,

    CONSTRAINT pk_departamento PRIMARY KEY (id_distribuidor, id_departamento),

    CONSTRAINT departamento_id_ciudad_fkey FOREIGN KEY (id_ciudad)
        REFERENCES ciudad (id_ciudad)
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,

    CONSTRAINT departamento_id_distribuidor_fkey FOREIGN KEY (id_distribuidor)
        REFERENCES distribuidor (id_distribuidor)
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);





CREATE TABLE IF NOT EXISTS tarea (
    id_tarea varchar(10) NOT NULL,
    nombre_tarea varchar(35) NOT NULL,
    sueldo_maximo numeric(6,0) NOT NULL,
    sueldo_minimo numeric(6,0) NOT NULL,
    CONSTRAINT pk_tarea PRIMARY KEY (id_tarea)
);



CREATE TABLE IF NOT EXISTS empleado (
    id_empleado integer NOT NULL,
    nombre varchar(30),
    apellido varchar(30) NOT NULL,
    porc_comision numeric(6,2),
    sueldo numeric(8,2),
    e_mail varchar(120) NOT NULL,
    fecha_nacimiento date NOT NULL,
    telefono varchar(20),
    id_tarea varchar(10) NOT NULL,
    id_departamento integer,
    id_distribuidor integer,
    id_jefe integer,

    CONSTRAINT pk_empleado PRIMARY KEY (id_empleado),

    CONSTRAINT empleado_id_distribuidor_departamento_fkey FOREIGN KEY (id_distribuidor, id_departamento)
        REFERENCES departamento (id_distribuidor, id_departamento)
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,

    CONSTRAINT empleado_id_jefe_fkey FOREIGN KEY (id_jefe)
        REFERENCES empleado (id_empleado)
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,

    CONSTRAINT empleado_id_tarea_fkey FOREIGN KEY (id_tarea)
        REFERENCES tarea (id_tarea)
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);
